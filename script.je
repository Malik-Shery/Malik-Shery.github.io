/* style.css */
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
}

#chat-container {
    width: 100%;
    max-width: 500px;
    margin: 50px auto;
    padding: 20px;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

#messages {
    height: 300px;
    overflow-y: auto;
    margin-bottom: 20px;
    border: 1px solid #ddd;
    padding: 10px;
    background-color: #fafafa;
    border-radius: 5px;
}

#message-input {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    margin-bottom: 10px;
}

#send-button {
    width: 100%;
    padding: 10px;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

#send-button:hover {
    background-color: #45a049;
}
// script.js

// Get DOM elements
const messagesDiv = document.getElementById("messages");
const messageInput = document.getElementById("message-input");
const sendButton = document.getElementById("send-button");

// Function to load messages from local storage
function loadMessages() {
    const messages = JSON.parse(localStorage.getItem("messages")) || [];
    
    messages.forEach(message => {
        const messageDiv = document.createElement("div");
        messageDiv.classList.add("message");
        messageDiv.innerText = message;
        messagesDiv.appendChild(messageDiv);
    });

    // Scroll to the bottom of the chat container
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
}

// Function to send a message
function sendMessage() {
    const message = messageInput.value.trim();
    if (message) {
        // Get existing messages from local storage
        const messages = JSON.parse(localStorage.getItem("messages")) || [];

        // Add the new message to the list
        messages.push(message);

        // Save the updated messages to local storage
        localStorage.setItem("messages", JSON.stringify(messages));

        // Display the new message
        const messageDiv = document.createElement("div");
        messageDiv.classList.add("message");
        messageDiv.innerText = message;
        messagesDiv.appendChild(messageDiv);

        // Clear the input field
        messageInput.value = "";

        // Scroll to the bottom of the chat container
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }
}

// Listen for the send button click
sendButton.addEventListener("click", function() {
    sendMessage();
});

// Listen for Enter key press to send message
messageInput.addEventListener("keypress", function(event) {
    if (event.key === "Enter") {
        sendMessage();
    }
});

// Load the messages when the page loads
window.onload = loadMessages;
